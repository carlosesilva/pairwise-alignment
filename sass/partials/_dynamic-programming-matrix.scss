$matrix-cell-width : 50px !default;
$matrix-cell-border : 1px solid $color-theme-3 !default;

.dynamicProgrammingMatrixWrapper {
    margin: 0 auto;
    
    td{
        position: relative;

        &.irrelevant{
            opacity:0.65;
        }

        &.guided input{
            box-shadow: inset 0 0 10px $color-theme-1;
        }
    }
    input[type=text], .dynamicProgrammingMatrixCell{
        width: $matrix-cell-width;
        height: $matrix-cell-width;
        text-align: center;
        background-color: $gray-lighter;
        border: $matrix-cell-border;
        color: $gray;
    }
    // first row and first column
    >tbody > tr:nth-child(1) td, >tbody > tr > td:nth-child(1){
        input[type=text]{
            background-color: $gray-dark;
            color: $color-theme-3; // not working on safari for some reason
            font-weight: bold;
        }
    }
    // the actual matrix
    .dynamicProgrammingMatrix{
        position: absolute;
        top: 0;
        left: 0;
    }
    

    .dynamicProgrammingMatrixCell:disabled{
        background-color: $disabled;
        opacity: .5;
        color: #000;
    }
    .dynamicProgrammingMatrixCell.correct{
        background-color: $correct;
        color: grayscale(saturate($correct, 50%));
    }
    .dynamicProgrammingMatrixCell.correct:disabled{
        background-color: mix($correct, $disabled);
        color: #000;
    }
    .dynamicProgrammingMatrixCell.wrong{
        background-color: $wrong;
    }
    .dynamicProgrammingMatrixCell.wrong:disabled{
        background-color: mix($wrong, $disabled);
        color: #000;
    }
    



    // used on correct matrix
    .dynamicProgrammingMatrixCell.tracebackActive{
        background-color: blue;
    }


    .tracebackSelect{
        position: absolute;
        text-align: left;
        top: 2px;
        left: 2px;
        width: $matrix-cell-width / 3.5;
        height: $matrix-cell-width / 3.5;
        background-color: #aaa;
        cursor: pointer;
        outline: none;
        font-size: 0.7rem;
        line-height: $matrix-cell-width / 3.5;
        border: 1px solid rgba(#000, .5);
        &.correct{
            background-color: darken($correct, 5%);
        }
        &.wrong{
            background-color: darken($wrong, 7%);
        }
    }

}



#tracebackSelectOptions{
    display: none;
    position: absolute;
    z-index: 99;
    
    background-color: $color-theme-3;
    border: 1px outset scale-color($color-theme-3, $lightness: -35%);
    text-align: left;
    padding: 10px;
    p{

    }
}
#tracebackSelectOptionsOverlay{
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 98;
    
    width: 100%;
    height: 100%;
}

$arrow-color: #000;
$arrow-head-size: 3px;
$arrow-thickness: 2px;
$arrow-length: $arrow-thickness * 4;


.arrow{
    display: none;
    position: absolute;
    border-top: $arrow-head-size solid transparent;
    border-right: ($arrow-head-size * 2) solid $arrow-color;
    border-bottom: $arrow-head-size solid transparent;

    &::before{
        content: "";
        display: inline-block;
        position: absolute;
        top: -1px;
        left: 4px;
        border-width: 0;
        background: $arrow-color;
        width: $arrow-length;
        height: $arrow-thickness;
    }

    
    &.active{
        display: block;
    }
}


.arrow-left{
    bottom: 0px;
    right: 8px;

    &.alone{
        bottom: 4px;
        right: 8px;
    }
}

.arrow-top{
    transform: rotate(90deg);
    transform-origin: 100% 0%;
    bottom: 2px;
    right: 0px;

    &.alone{
        bottom: 1px;
        right: 4px;
    }
}

.arrow-diag{
    transform: rotate(45deg);
    transform-origin: 100% 0%;
    bottom: 5px;
    right: 7px;

    &.alone{
        bottom: 5px;
        right: 7px;
    }

    &::before{
        width: $arrow-length * 1.25;
    }
}